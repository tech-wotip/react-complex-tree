(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3129],{30876:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return m}});var i=r(2784);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=i.createContext({}),c=function(e){var t=i.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return i.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return r?i.createElement(f,a(a({ref:t},l),{},{components:r})):i.createElement(f,a({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}p.displayName="MDXCreateElement"},12285:function(e,t,r){"use strict";r.d(t,{i:function(){return a}});var i=r(7560),n=r(2784),o=r(18873),a=function(e){var t=e.storyName,r=e.iframeProps;return n.createElement(o.Z,(0,i.Z)({src:"/storybook/iframe.html?id="+t+"&args=&viewMode=story",frameBorder:0,allowtransparency:"true",style:r.width||r.minWidth||r.maxWidth?{}:{width:"1px",minWidth:"100%"}},null!=r?r:{}))}},30318:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var i=r(7560),n=r(98283),o=(r(2784),r(30876)),a=r(12285),s=["components"],d={sidebar_position:11.5},c="Accessibility",l={unversionedId:"guides/accessibility",id:"guides/accessibility",isDocsHomePage:!1,title:"Accessibility",description:"React Complex Tree provides several features to make the tree component accessible to all users.",source:"@site/docs/guides/accessibility.mdx",sourceDirName:"guides",slug:"/guides/accessibility",permalink:"/docs/guides/accessibility",editUrl:"https://github.com/lukasbach/react-complex-tree/edit/main/packages/docs/docs/guides/accessibility.mdx",version:"current",sidebarPosition:11.5,frontMatter:{sidebar_position:11.5},sidebar:"tutorialSidebar",previous:{title:"External Interaction via Refs",permalink:"/docs/guides/refs"},next:{title:"BlueprintJS Renderers",permalink:"/docs/guides/blueprintjs"}},u=[{value:"DOM structure compliant with W3C&#39;s recommendations",id:"dom-structure-compliant-with-w3cs-recommendations",children:[]},{value:"Complete Control via keybindings",id:"complete-control-via-keybindings",children:[]},{value:"Live descriptors",id:"live-descriptors",children:[{value:"Custom descriptor texts",id:"custom-descriptor-texts",children:[]},{value:"Custom Keybindings",id:"custom-keybindings",children:[]}]}],p={toc:u};function m(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"accessibility"},"Accessibility"),(0,o.kt)("p",null,"React Complex Tree provides several features to make the tree component accessible to all users."),(0,o.kt)("h2",{id:"dom-structure-compliant-with-w3cs-recommendations"},"DOM structure compliant with W3C's recommendations"),(0,o.kt)("p",null,"The W3C defines specific\n",(0,o.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/wai-aria-practices-1.1/examples/treeview/treeview-2/treeview-2a.html"},"guidelines for how a tree view should be structured to be accessible"),".\nThe guideline is fulfilled by the default render methods that are provided by React Complex Tree. If you\nimplement custom render methods, you will need to make sure that the general DOM structure still complies\nto the guidelines (i.e. by using nested ",(0,o.kt)("inlineCode",{parentName:"p"},"ul"),"-lists), however even then React Complex Tree does most of the work\nfor you by providing most DOM attributes such as ",(0,o.kt)("inlineCode",{parentName:"p"},"aria"),"-tags, role attributes and event handlers as props for\nthe render methods. ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/rendering"},"Look into the documentation on custom render hooks to find out more"),"."),(0,o.kt)("h2",{id:"complete-control-via-keybindings"},"Complete Control via keybindings"),(0,o.kt)("p",null,"All features can be accessed via keybindings, including\n",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/keyboard#keyboard-bound-drag-and-drop-sequences"},"drag and drop"),", searching and renaming.\n",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/keyboard"},"Find out more in the documentation on keyboard bindings.")),(0,o.kt)("h2",{id:"live-descriptors"},"Live descriptors"),(0,o.kt)("p",null,"A visually hidden live section is rendered at the top of the tree that explains the state of the tree\nto screen readers. Screen readers are notified about updates to the state of the tree. This is particularly\nimportant when using drag-and-drop features via keyboard interactions."),(0,o.kt)(a.i,{storyName:"auto-demo-autodemo-component--visible-live-descriptors",iframeProps:{width:600},mdxType:"StoryEmbed"}),(0,o.kt)("p",null,"Live descriptors are displayed by default. They can be turned off by providing a ",(0,o.kt)("inlineCode",{parentName:"p"},"showLiveDescription")," prop to\nthe environment with the value ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),". They can be further customized via additional props."),(0,o.kt)("h3",{id:"custom-descriptor-texts"},"Custom descriptor texts"),(0,o.kt)("p",null,"Provide a ",(0,o.kt)("inlineCode",{parentName:"p"},"liveDescriptors")," prop to the environment to define custom descriptor texts. How descriptors are named\nis described ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/interfaces/livedescriptors"},"in the respective API document"),". This is helpful for\nlocalizing the descriptors to different languages."),(0,o.kt)("p",null,"When defining descriptors, the following substrings can be used as variables that are replaced during runtime:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"{treeLabel}"),": the label provided to the tree component"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"{keybinding:bindingname}"),": a specific keybinding. ",(0,o.kt)("inlineCode",{parentName:"li"},"bindingname")," needs to be a key of the ",(0,o.kt)("a",{parentName:"li",href:"/docs/api/interfaces/keyboardbindings"},(0,o.kt)("inlineCode",{parentName:"a"},"KeyboardBindings")," interface"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"{dragTarget}"),": If currently dragging, a description of the drag target."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"{dragItems}"),": A list of item titles of items that are currently being dragged, seperated by commas."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"{renamingItem}"),": If currently renaming an item, the title of the item that is being renamed.")),(0,o.kt)(a.i,{storyName:"core-accessibility--custom-descriptors",iframeProps:{width:600},mdxType:"StoryEmbed"}),(0,o.kt)("h3",{id:"custom-keybindings"},"Custom Keybindings"),(0,o.kt)("p",null,"If custom keybindings are provided to the tree environment, live descriptors do not need to be updated as they\nautomatically include the correct bindings."),(0,o.kt)(a.i,{storyName:"core-accessibility--custom-hotkeys",iframeProps:{width:600},mdxType:"StoryEmbed"}))}m.isMDXComponent=!0}}]);