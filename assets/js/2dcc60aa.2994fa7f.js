(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5645],{30876:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),m=u(t),p=o,f=m["".concat(s,".").concat(p)]||m[p]||c[p]||i;return t?r.createElement(f,l(l({ref:n},d),{},{components:t})):r.createElement(f,l({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=m;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},20634:function(e,n,t){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__exportStar||function(e,n){for(var t in e)"default"===t||Object.prototype.hasOwnProperty.call(n,t)||r(n,e,t)};Object.defineProperty(n,"__esModule",{value:!0}),o(t(13577),n)},13577:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.shortTree=n.longTree=void 0;var t=function e(n,t){void 0===t&&(t={items:{}});for(var r=0,o=Object.entries(n);r<o.length;r++){var i=o[r],l=i[0],a=i[1];t.items[l]={index:l,canMove:!0,hasChildren:null!==a,children:null!==a?Object.keys(a):void 0,data:l,canRename:!0},null!==a&&e(a,t)}return t};n.longTree=t({root:{Fruit:{Apple:null,Orange:null,Lemon:null,Berries:{Strawberry:null,Blueberry:null},Banana:null},Meals:{America:{SmashBurger:null,Chowder:null,Ravioli:null,MacAndCheese:null,Brownies:null},Europe:{Risotto:null,Spaghetti:null,Pizza:null,Weisswurst:null,Spargel:null},Asia:{Curry:null,PadThai:null,Jiaozi:null,Sushi:null},Australia:{PotatoWedges:null,PokeBowl:null,LemonCurd:null,KumaraFries:null}},Desserts:{Cookies:null,IceCream:null},Drinks:{PinaColada:null,Cola:null,Juice:null}}}),n.shortTree=t({root:{container:{item0:null,item1:null,item2:null,item3:{inner0:null,inner1:null,inner2:null,inner3:null},item4:null,item5:null}}})},89159:function(e,n,t){"use strict";t.d(n,{n:function(){return o}});var r=t(2784),o=function(e){var n=function(e){var n=(0,r.useState)(null),o=n[0],i=n[1];return(0,r.useEffect)((function(){var n=!1;return t(29351)("./"+e+".json").then((function(e){n||(n=!0,i(e.default))})).catch(console.error),function(){n=!0}}),[e]),o}(e.name);return n?r.createElement("table",null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Default Value"),r.createElement("th",null,"Required"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,Object.keys(n).map((function(e){var t;return r.createElement("tr",{key:e},r.createElement("td",null,r.createElement("code",null,e)),r.createElement("td",null,r.createElement("code",null,null==(t=n[e].type)?void 0:t.name)),r.createElement("td",null,n[e].defaultValue&&r.createElement("code",null,n[e].defaultValue.value)),r.createElement("td",null,n[e].required?"Yes":"No"),r.createElement("td",null,n[e].description))})))):null}},34:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var r=t(7560),o=t(98283),i=(t(2784),t(30876)),l=(t(20634),t(89159)),a=["components"],s={sidebar_position:3},u="Controlled Environment",d={unversionedId:"guides/controlled-environment",id:"guides/controlled-environment",isDocsHomePage:!1,title:"Controlled Environment",description:"A controlled environment provides more flexibility and more possibilities for customization, but",source:"@site/docs/guides/controlled-environment.mdx",sourceDirName:"guides",slug:"/guides/controlled-environment",permalink:"/docs/guides/controlled-environment",editUrl:"https://github.com/lukasbach/react-complex-tree/edit/main/packages/docs/docs/guides/controlled-environment.mdx",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Custom Data Provider",permalink:"/docs/guides/custom-data-provider"},next:{title:"Styling Customizability",permalink:"/docs/guides/styling"}},c=[{value:"Managing the view state of the tree",id:"managing-the-view-state-of-the-tree",children:[]},{value:"Lazy loading items",id:"lazy-loading-items",children:[]},{value:"Component Props",id:"component-props",children:[]}],m={toc:c};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"controlled-environment"},"Controlled Environment"),(0,i.kt)("p",null,"A controlled environment provides more flexibility and more possibilities for customization, but\nyou need to implement your own logic for managing and retaining the view state of each tree, i.e.\nwhich items are expanded, selected, focused etc."),(0,i.kt)("p",null,"Furthermore, you need to provide all items directly and, if not all items are available at the start,\nimplement custom logic to asynchronously load items if they need to be displayed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function App() {\n  return (\n    <ControlledTreeEnvironment items={longTree.items} getItemTitle={item => item.data} viewState={{}}>\n      <Tree treeId="tree-1" rootItem="root" treeLabel="Tree Example" />\n    </ControlledTreeEnvironment>\n  );\n}\n')),(0,i.kt)("p",null,"As you can see from the example, you can focus the tree and even search for items, but not change\nthe focused or selected item."),(0,i.kt)("h2",{id:"managing-the-view-state-of-the-tree"},"Managing the view state of the tree"),(0,i.kt)("p",null,"To implement this, provide an implementation for the ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/treechangehandlers"},"TreeChangeHandlers"),"\ninterface and provide it as spreaded props to the controlled environment, then provide a\n",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/treeviewstate"},"viewState")," prop that defines the visual state of each tree by providing\na ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/individualtreeviewstate"},"individual viewState")," for every tree in your environment."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function App() {\n  const [focusedItem, setFocusedItem] = useState();\n  const [expandedItems, setExpandedItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  return (\n    <ControlledTreeEnvironment\n      items={longTree.items}\n      getItemTitle={item => item.data}\n      viewState={{\n        [\'tree-2\']: {\n          focusedItem,\n          expandedItems,\n          selectedItems,\n        },\n      }}\n      onFocusItem={item => setFocusedItem(item.index)}\n      onExpandItem={item => setExpandedItems([...expandedItems, item.index])}\n      onCollapseItem={item =>\n        setExpandedItems(expandedItems.filter(expandedItemIndex => expandedItemIndex !== item.index))\n      }\n      onSelectItems={items => setSelectedItems(items)}\n    >\n      <Tree treeId="tree-2" rootItem="root" treeLabel="Tree Example" />\n    </ControlledTreeEnvironment>\n  );\n}\n')),(0,i.kt)("h2",{id:"lazy-loading-items"},"Lazy loading items"),(0,i.kt)("p",null,"As with the uncontrolled environment, you can provide an incomplete tree structure with\nmissing items that are referenced in other items as children. The ",(0,i.kt)("inlineCode",{parentName:"p"},"onMissingItems")," handler\nwill be invoked if an item is expanded whose children are not yet loaded, so you can\nimplement logic to load the items if that handler is invoked, and provide them alongside existing\nchildren in the next render iteration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function App() {\n  const [focusedItem, setFocusedItem] = useState();\n  const [expandedItems, setExpandedItems] = useState([]);\n  return (\n    <ControlledTreeEnvironment\n      items={{\n        root: {\n          index: 'root',\n          canMove: true,\n          hasChildren: true,\n          children: ['child1'],\n          data: 'Root item',\n          canRename: true,\n        },\n        child1: {\n          index: 'child1',\n          canMove: true,\n          hasChildren: true,\n          children: ['child2'],\n          data: 'Child item',\n          canRename: true,\n        },\n      }}\n      getItemTitle={item => item.data}\n      viewState={{\n        ['tree-3']: {\n          focusedItem,\n          expandedItems,\n        },\n      }}\n      onFocusItem={item => setFocusedItem(item.index)}\n      onExpandItem={item => setExpandedItems([...expandedItems, item.index])}\n      onMissingItems={items => alert(`We should now load the items ${items.join(', ')}...`)}\n    >\n      <Tree treeId=\"tree-3\" rootItem=\"root\" treeLabel=\"Tree Example\" />\n    </ControlledTreeEnvironment>\n  );\n}\n")),(0,i.kt)("h2",{id:"component-props"},"Component Props"),(0,i.kt)("p",null,"The props for the ",(0,i.kt)("inlineCode",{parentName:"p"},"ControlledTreeEnvironment")," are as follows:"),(0,i.kt)(l.n,{name:"ControlledTreeEnvironment",mdxType:"PropTable"}))}p.isMDXComponent=!0},29351:function(e,n,t){var r={"./ControlledTreeEnvironment.json":[96435,6435],"./DragAndDropProvider.json":[49919,9919],"./DragBetweenLine.json":[82614,2614],"./EnvironmentActionsProvider.json":[69304,9304],"./InteractionManagerProvider.json":[6155,6155],"./LiveDescription.json":[26020,6020],"./SearchInput.json":[86393,6393],"./Tree.json":[7398,7398],"./TreeActionsProvider.json":[37093,7093],"./TreeItem.json":[9565,9565],"./TreeItemChildren.json":[22050,2050],"./TreeItemRenamingInput.json":[55861,5861],"./UncontrolledTreeEnvironment.json":[73159,3159],"./createDefaultRenderers.json":[45466,5466]};function o(e){if(!t.o(r,e))return Promise.resolve().then((function(){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}));var n=r[e],o=n[0];return t.e(n[1]).then((function(){return t.t(o,19)}))}o.keys=function(){return Object.keys(r)},o.id=29351,e.exports=o}}]);